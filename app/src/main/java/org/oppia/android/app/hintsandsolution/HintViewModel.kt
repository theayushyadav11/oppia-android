package org.oppia.android.app.hintsandsolution

import androidx.databinding.ObservableBoolean
import org.oppia.android.util.logging.ConsoleLogger
import org.oppia.android.util.parser.html.CUSTOM_CONCEPT_CARD_TAG
import org.oppia.android.util.parser.html.ConceptCardTagHandler
import org.oppia.android.util.parser.html.CustomHtmlContentHandler

/**
 * [HintsAndSolutionItemViewModel] that represents a single hint that can be shown to the user.
 *
 * @property title the title of this hint, relative to others (this is generated by the app)
 * @property hintSummary the core hint text (which may contain HTML) to show the user
 * @property isHintRevealed whether the hint is currently expanded and viewable
 * @property conceptCardLinkClickListener listener for handling concept card clicks
 * @property consoleLogger logger for handling any parsing errors
 */
class HintViewModel(
  val title: String,
  val hintSummary: String,
  val isHintRevealed: ObservableBoolean,
  private val conceptCardLinkClickListener: ConceptCardTagHandler.ConceptCardLinkClickListener,
  private val consoleLogger: ConsoleLogger
) : HintsAndSolutionItemViewModel() {
  /**
   * A screenreader-friendly version of [hintSummary] that should be used for readout, in place of
   * the original summary.
   */
  val hintContentDescription: String by lazy {
    CustomHtmlContentHandler.getContentDescription(
      hintSummary,
      imageRetriever = null,
      customTagHandlers = mapOf(
        CUSTOM_CONCEPT_CARD_TAG to ConceptCardTagHandler(
          conceptCardLinkClickListener,
          consoleLogger
        )
      )
    )
  }
}
